{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d519a972",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "from io import BytesIO\n",
    "import re\n",
    "\n",
    "def tratar_dados(df):\n",
    "    # Remover colunas duplicadas (O-Q)\n",
    "    df = df.loc[:, ~df.columns.duplicated()]\n",
    "    \n",
    "    # Corrigir datas\n",
    "    df['Data'] = pd.to_datetime(df['Data']).dt.date\n",
    "    \n",
    "    # Remover HTML das descri√ß√µes\n",
    "    df['Descri√ß√£o'] = df['Descri√ß√£o'].apply(lambda x: re.sub('<br>', '\\n', str(x)))\n",
    "    \n",
    "    # Corrigir f√≥rmulas\n",
    "    try:\n",
    "        total_fisico_dez = df['Tiragem'].count()  # Simula√ß√£o da f√≥rmula COUNTA(J6:J142)\n",
    "        total_nov = df['OS'].count()              # Simula√ß√£o da f√≥rmula COUNTA(A6:A186)\n",
    "        \n",
    "        df.loc[1, 'F'] = total_fisico_dez         # Linha F1\n",
    "        df.loc[3, 'F'] = total_nov                # Linha F3\n",
    "        df.loc[2, 'F'] = total_nov - total_fisico_dez  # Linha F3 corrigida\n",
    "    except:\n",
    "        pass\n",
    "    \n",
    "    # Corrigir sequ√™ncia de OSs\n",
    "    df['OS'] = range(1600, 1600 + len(df))\n",
    "    \n",
    "    return df\n",
    "\n",
    "def main():\n",
    "    st.title(\"üìä Tratamento de OSs Gr√°ficas\")\n",
    "    \n",
    "    # Upload do arquivo\n",
    "    uploaded_file = st.file_uploader(\"Carregue seu arquivo Excel\", type=\"xlsx\")\n",
    "    \n",
    "    if uploaded_file:\n",
    "        # Ler dados\n",
    "        df = pd.read_excel(uploaded_file, sheet_name=\"Planilha1\")\n",
    "        \n",
    "        # Processar dados\n",
    "        df_tratado = tratar_dados(df)\n",
    "        \n",
    "        # Mostrar preview\n",
    "        st.subheader(\"Dados Tratados\")\n",
    "        st.dataframe(df_tratado.head(10))\n",
    "        \n",
    "        # Estat√≠sticas\n",
    "        st.subheader(\"üìà M√©tricas Chave\")\n",
    "        col1, col2, col3 = st.columns(3)\n",
    "        with col1:\n",
    "            st.metric(\"Total de OSs\", len(df_tratado))\n",
    "        with col2:\n",
    "            st.metric(\"OSs em Dezembro\", df_tratado[df_tratado['Data'].apply(lambda x: x.month == 12)].shape[0])\n",
    "        with col3:\n",
    "            st.metric(\"Principal Executor\", df_tratado['Executor'].mode()[0])\n",
    "        \n",
    "        # An√°lise por produto\n",
    "        st.subheader(\"üì¶ OSs por Tipo de Produto\")\n",
    "        produtos = df_tratado['Produto'].value_counts()\n",
    "        st.bar_chart(produtos)\n",
    "        \n",
    "        # Exportar dados\n",
    "        output = BytesIO()\n",
    "        with pd.ExcelWriter(output, engine='xlsxwriter') as writer:\n",
    "            df_tratado.to_excel(writer, index=False)\n",
    "        \n",
    "        st.download_button(\n",
    "            label=\"‚¨áÔ∏è Baixar Dados Tratados\",\n",
    "            data=output.getvalue(),\n",
    "            file_name=\"dados_tratados.xlsx\",\n",
    "            mime=\"application/vnd.ms-excel\"\n",
    "        )\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": None,
   "id": "e4e04e61",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
